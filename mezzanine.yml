---
- name: Deploy mezzanine
  hosts: web
  vars:
    user: "{{ ansible_user }}"
    proj_app: mezzanine_example
    proj_name: "{{ proj_app }}"
    venv_home: "{{ ansible_env.HOME }}/.virtualenvs"
    venv_path: "{{ venv_home }}/{{ proj_name }}"
    proj_path: "{{ ansible_env.HOME }}/mezzanine/{{ proj_name }}"
    settings_path: "{{ proj_path }}/{{ proj_name }}"
    reqs_path: requirements.txt
    manage: "{{ python }} {{ proj_path }}/manage.py"
    live_hostname: 192.168.33.10.xip.io
    domains:
      - 192.168.33.10.xip.io
      - www.192.168.33.10.xip.io
    repo_url: git@gihub.com:lorin/mezzanine_example.git
    locale: en_US.UTF-8
    # Variables below don't appear in Mezannine's fabfile.py
    # but they were added for convenience
    conf_path: /etc/nginx/conf
    tls_enabled: True
    python: "{{ venv_path }}/bin/python3"
    database_name: "{{ proj_name }}"
    database_user: "{{ proj_name }}"
    database_host: localhost
    database_port: 5432
    gunicorn_procname:  gunicorn_mezzanine
    num_workers: "multiprocessing.cpu_count() * 2 + 1"
  var_files:
    - secrets.yml
  tasks:
    - name: install apt packages
    - name: create project path
    - name: create a logs directory
    - name: check out the repository on the host
    - name: install Python requirements globally via pip
    - name: create project locale
    - name: create a DB user
    - name: create the database
    - name: ensure config path exists
    - name: create tls certificates
    - name: remove the default nginx config file
    - name: set the nginx config file
    - name: enable the nginx config file
    - name: set the supervisor config file
    - name: install poll twitter conr job
    - name: set the gunicorn config file
    - name: generate the settings file
    - name: install requirements.txt
    - name: install required python packages
    - name: apply migration sto create the database, collect static content
    - name: set the site id
    - name: set the admin password
  handlers:
    - name: restart supervisor
    - name: restart nginx


